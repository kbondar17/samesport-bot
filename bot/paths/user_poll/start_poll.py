import logging
import asyncio

from aiogram import types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher import FSMContext

from bot.loader import get_logger, bot, dp
from bot.db.db_funs import wp_repo 
from bot.my_states import My_states

logger = get_logger(f'my_log-{__name__}')


async def start_poll():
    # —Å–±–æ—Ä –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π 
    await asyncio.sleep(2678400)

    kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–î–∞, –∫–æ–Ω–µ—á–Ω–æ',callback_data='poll#yes'),
    InlineKeyboardButton(text='–í –¥—Ä—É–≥–æ–π —Ä–∞–∑', callback_data='poll#no')  ]])
    await bot.send_message(text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ï—Å—Ç—å –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –¥–≤–∞ –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–∞? –í—ã –Ω–∞–º –æ—á–µ–Ω—å –ø–æ–º–æ–∂–∏—Ç–µ.', chat_id=283233169, reply_markup=kb)
    

@dp.callback_query_handler(text_contains='poll')
async def first_question(call: types.CallbackQuery):
    await call.message.answer(text='–°–∫–æ–ª—å–∫–æ –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–π –º–µ—Å—è—Ü –∫ –≤–∞–º –æ–±—Ä–∞—Ç–∏–ª–æ—Å—å –Ω–æ–≤—ã—Ö –ª—é–¥–µ–π? (–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ü–∏—Ñ—Ä—É)')
    await My_states.poll_how_many.set()


@dp.message_handler(state=My_states.poll_how_many)
async def second_question(message: types.Message, state: FSMContext):
    if message.text != '0':    
        await message.answer(text='–°–∫–æ–ª—å–∫–æ –∏–∑ –Ω–∏—Ö –∑–Ω–∞—é—Ç –æ —Å–∞–π—Ç–µ samesport.ru?')
    wp_repo.add_user_data(uid=1, number=message.text)
    await My_states.poll_how_many_from_same.set()
    

@dp.message_handler(state=My_states.poll_how_many_from_same)
async def final_question(message: types.Message, state: FSMContext):
 
    wp_repo.add_user_data_2(uid=1, number=message.text)
    await message.answer(text='–ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞ –ª—é–±—É—é —Ç–µ–º—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏')
    await My_states.poll_end.set()


@dp.message_handler(state=My_states.poll_end)
async def final_question(message: types.Message, state: FSMContext):
    await message.answer(text='–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –≠—Ç–æ –æ—á–µ–Ω—å –ø–æ–º–æ–≥–∞–µ—Ç –≤ —Ä–∞–±–æ—Ç–µ üôèüèª')
    await state.reset_state()



