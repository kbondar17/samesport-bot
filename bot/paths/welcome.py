from aiogram import types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.dispatcher import FSMContext

from bot.loader import get_logger, dp
from bot.db.db_funs import wp_repo

from bot.my_states import My_states

logger = get_logger(f'my_log-{__name__}')


welcome_text =  '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è —á–∞—Ç-–±–æ—Ç SameSport. –Ø –ø–æ–º–æ–≥–∞—é –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–µ–∫—Ü–∏—è—Ö –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ SameSport'
main_menu = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='üìù –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–µ–∫—Ü–∏–∏'),
                                                KeyboardButton(text='‚ùì –û –±–æ—Ç–µ')],
                                              ]
                                    )


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å

    user_id = message.from_user.id
    
    # check_if_authorized = wp_repo.check_if_authorized(user_id)
    check_if_authorized = True
    await message.answer(text=welcome_text)
    
    if not check_if_authorized:
        await My_states.typing_email.set()
        await message.answer(text='–î–∞–≤–∞–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ—á—Ç—É, —Å –∫–æ—Ç–æ—Ä–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ —Å–∞–π—Ç–µ samesport.ru üëáüèª')


@dp.message_handler(state=My_states.typing_email)
async def check_email(message: types.Message, state: FSMContext):
    email = message.text
    if email == 'samesport@mail.ru':
        await message.answer("–û—Ç–ª–∏—á–Ω–æ! –ê —Ç–µ–ø–µ—Ä—å –ø–∞—Ä–æ–ª—å")
        await My_states.typing_pass.set()
    
    else:
        await message.answer("–≠—Ç–∞ –ø–æ—á—Ç–∞ –Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é.")
    


@dp.callback_query_handler(text_contains='cancel', state='*')
async def back_to_start(call: types.CallbackQuery, state: FSMContext):
    await state.reset_state()
    await call.message.answer(text=welcome_text, reply_markup=main_menu)
